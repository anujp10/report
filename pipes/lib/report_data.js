var areaJSON={"columns":["", "ALUTs", "FFs", "RAMs", "DSPs", "MLABs", "Details"], "debug_enabled":"true", "type":"module", "total_percent":[43.0074, 22.2809, 22.0427, 20.6045, 8.23452], "total":[189168, 376665, 559, 125, 60], "name":"Kernel System", "max_resources":[854400, 1708800, 2713, 1518, 42720], "children":[{"name":"Static Partition", "type":"partition", "children":[{"name":"Board interface", "type":"resource", "data":[179950, 358572, 492, 123, 0], "details":[{"type":"text", "text":"Platform interface logic."}]}]}, {"name":"Global interconnect", "type":"resource", "data":[5034, 9568, 52, 0, 0], "details":[{"type":"text", "text":"Global interconnect for 1 global load and 1 global store."}, {"type":"brief", "text":"For 1 global load and 1 global store."}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Global Memory Interconnect", "link":"file:////glob/development-tools/versions/oneapi/gold/inteloneapi/compiler/2021.1.2/linux/lib/oclfpga/aoc_help_pages/hnj1476724450050.html"}]}]}, {"name":"System description ROM", "type":"resource", "data":[0, 67, 2, 0, 0], "details":[{"type":"text", "text":"This read-only memory contains information for the host about the system and about each kernel in the system, including kernel names, arguments, and attributes. The system description ROM ensures that the binary image on the FPGA is compatible with the host program."}, {"type":"brief", "text":"Contains information for the host."}]}, {"name":"Pipe resources", "type":"group", "children":[{"name":"Pipe (cl::sycl::INTEL::pipe<ProducerConsumerPipe, int, 4>)", "type":"resource", "data":[27, 206, 0, 0, 0], "details":[{"type":"text", "text":"Pipe is implemented 32 bits wide by 4 deep."}, {"type":"brief", "text":"32b wide by 4 deep."}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Channels", "link":"file:////glob/development-tools/versions/oneapi/gold/inteloneapi/compiler/2021.1.2/linux/lib/oclfpga/aoc_help_pages/qah1476410829821.html"}]}]}]}, {"name":"ConsumerTutorial", "compute_units":1, "type":"function", "total_percent":[0.627993, 0.358146, 0.296758, 0, 0.131752], "total_kernel_resources":[2140, 5071, 0, 1.5, 46], "details":[{"type":"text", "text":"Number of compute units: 1"}, {"type":"brief", "text":"1 compute unit."}], "children":[{"name":"Function overhead", "type":"resource", "data":[1338, 2411, 0, 0, 10], "details":[{"type":"text", "text":"Kernel dispatch logic."}, {"type":"brief", "text":"Kernel dispatch logic."}]}, {"name":"Coalesced Private Variables: \\n - \'i\' (pipes.cpp:63)\\n - \'LinearIndex\' (accessor.hpp:1523)", "type":"resource", "data":[7, 69, 0, 0, 0], "debug":[[{"filename":"accessor.hpp", "line":1523}], [{"filename":"pipes.cpp", "line":63}]], "details":[{"type":"text", "text":"Type: Register"}, {"type":"text", "text":"1 register of width 65 bits and depth 1"}, {"type":"brief", "text":"Register,\\n1 reg, 65 width by 1 depth"}]}, {"name":"Private Variable: \\n - \'i\' (pipes.cpp:63)", "type":"resource", "data":[7, 68, 0, 0, 0], "debug":[[{"filename":"pipes.cpp", "line":63}]], "details":[{"type":"text", "text":"Type: Register"}, {"type":"text", "text":"1 register of width 64 bits and depth 1"}, {"type":"brief", "text":"Register,\\n1 reg, 64 width by 1 depth"}]}, {"name":"ConsumerTutorial.B0", "type":"basicblock", "children":[{"name":"State", "type":"resource", "data":[2, 66, 0, 0, 0], "details":[{"type":"brief", "text":"Live values and control logic"}, {"type":"text", "text":"Resources for live values and control logic. To reduce this area:", "details":[{"type":"text", "text":"reduce size of local variables"}, {"type":"text", "text":"reduce scope of local variables, localizing them as much as possible"}, {"type":"text", "text":"reduce number of nested loops"}]}], "children":[{"name":"pipes.cpp:63", "type":"resource", "data":[2, 66, 0, 0, 0], "debug":[[{"filename":"/home/u58822/One-API/oneAPI-samples/DirectProgramming/DPC++FPGA/Tutorials/Features/pipes/build/src/pipes.cpp", "line":63}]]}]}, {"name":"Feedback", "type":"resource", "data":[8, 2, 0, 0, 0], "details":[{"type":"brief", "text":"Loop-carried dependencies"}, {"type":"text", "text":"Resources for loop-carried dependencies. To reduce this area:", "details":[{"type":"text", "text":"reduce number and size of loop-carried variables"}]}], "children":[{"name":"No Source Line", "type":"resource", "data":[8, 2, 0, 0, 0]}]}, {"name":"Computation", "type":"resource", "children":[{"name":"pipes.cpp:63", "type":"resource", "data":[152, 65, 0, 0, 0], "debug":[[{"filename":"/home/u58822/One-API/oneAPI-samples/DirectProgramming/DPC++FPGA/Tutorials/Features/pipes/build/src/pipes.cpp", "line":63}]], "children":[{"name":"64-bit Integer Compare", "type":"resource", "count":2, "data":[88, 1, 0, 0, 0]}, {"name":"64-bit Select", "type":"resource", "count":1, "data":[64, 64, 0, 0, 0]}], "replace_name":"true"}]}]}, {"name":"ConsumerTutorial.B1", "type":"basicblock", "children":[{"name":"State", "type":"resource", "data":[11, 16, 0, 0, 0], "details":[{"type":"brief", "text":"Live values and control logic"}, {"type":"text", "text":"Resources for live values and control logic. To reduce this area:", "details":[{"type":"text", "text":"reduce size of local variables"}, {"type":"text", "text":"reduce scope of local variables, localizing them as much as possible"}, {"type":"text", "text":"reduce number of nested loops"}]}], "children":[{"name":"No Source Line", "type":"resource", "data":[11, 16, 0, 0, 0]}]}, {"name":"Feedback", "type":"resource", "data":[41, 35, 0, 0, 0], "details":[{"type":"brief", "text":"Loop-carried dependencies"}, {"type":"text", "text":"Resources for loop-carried dependencies. To reduce this area:", "details":[{"type":"text", "text":"reduce number and size of loop-carried variables"}]}], "children":[{"name":"pipes.cpp:63", "type":"resource", "data":[41, 35, 0, 0, 0], "debug":[[{"filename":"/home/u58822/One-API/oneAPI-samples/DirectProgramming/DPC++FPGA/Tutorials/Features/pipes/build/src/pipes.cpp", "line":63}]]}]}, {"name":"Cluster logic", "type":"resource", "data":[16, 12, 0, 0, 5], "details":[{"type":"brief", "text":"Logic required to efficiently support sets of operations that do not stall"}, {"type":"text", "text":"Logic required to efficiently support sets of operations that do not stall. This area cannot be affected directly."}]}, {"name":"Computation", "type":"resource", "children":[{"name":"pipes.cpp:63", "type":"resource", "data":[82, 0, 0, 0, 0], "debug":[[{"filename":"/home/u58822/One-API/oneAPI-samples/DirectProgramming/DPC++FPGA/Tutorials/Features/pipes/build/src/pipes.cpp", "line":63}]], "children":[{"name":"1-bit And", "type":"resource", "count":1, "data":[1, 0, 0, 0, 0]}, {"name":"1-bit Or", "type":"resource", "count":5, "data":[3, 0, 0, 0, 0]}, {"name":"4-bit Select", "type":"resource", "count":1, "data":[4, 0, 0, 0, 0]}, {"name":"65-bit Integer Compare", "type":"resource", "count":1, "data":[22, 0, 0, 0, 0]}, {"name":"65-bit Select", "type":"resource", "count":1, "data":[52, 0, 0, 0, 0]}], "replace_name":"true"}, {"name":"pipes.cpp:65 > pipes.hpp:61", "type":"resource", "data":[1, 0, 0, 0, 0], "debug":[[{"filename":"/home/u58822/One-API/oneAPI-samples/DirectProgramming/DPC++FPGA/Tutorials/Features/pipes/build/src/pipes.cpp", "line":65}, {"filename":"/glob/development-tools/versions/oneapi/gold/inteloneapi/compiler/2021.1.2/linux/bin/../include/sycl/CL/sycl/INTEL/pipes.hpp", "line":61}]], "children":[{"name":"Pipe Read", "type":"resource", "count":1, "data":[1, 0, 0, 0, 0]}], "replace_name":"true"}, {"name":"pipes.cpp:68 > pipes.cpp:51", "type":"resource", "data":[79, 191, 0, 1.5, 0], "debug":[[{"filename":"/home/u58822/One-API/oneAPI-samples/DirectProgramming/DPC++FPGA/Tutorials/Features/pipes/build/src/pipes.cpp", "line":68}, {"filename":"/home/u58822/One-API/oneAPI-samples/DirectProgramming/DPC++FPGA/Tutorials/Features/pipes/build/src/pipes.cpp", "line":51}]], "children":[{"name":"32-bit Integer Multiply", "type":"resource", "count":1, "data":[79, 191, 0, 1.5, 0]}], "replace_name":"true"}, {"name":"pipes.cpp:71", "type":"resource", "data":[391, 2128, 0, 0, 31], "debug":[[{"filename":"/home/u58822/One-API/oneAPI-samples/DirectProgramming/DPC++FPGA/Tutorials/Features/pipes/build/src/pipes.cpp", "line":71}]], "children":[{"name":"Store", "type":"resource", "count":1, "data":[391, 2128, 0, 0, 31], "details":[{"type":"text", "text":"Store uses a Burst-coalesced LSU"}, {"type":"brief", "text":"Burst-coalesced LSU"}]}], "replace_name":"true"}]}]}, {"name":"ConsumerTutorial.B2", "type":"basicblock", "children":[{"name":"Feedback", "type":"resource", "data":[5, 8, 0, 0, 0], "details":[{"type":"brief", "text":"Loop-carried dependencies"}, {"type":"text", "text":"Resources for loop-carried dependencies. To reduce this area:", "details":[{"type":"text", "text":"reduce number and size of loop-carried variables"}]}], "children":[{"name":"No Source Line", "type":"resource", "data":[5, 8, 0, 0, 0]}]}]}]}, {"name":"ProducerTutorial", "compute_units":1, "type":"function", "total_percent":[0.431136, 0.268844, 0.186154, 0.479174, 0], "total_kernel_resources":[2017, 3181, 13, 0, 14], "details":[{"type":"text", "text":"Number of compute units: 1"}, {"type":"brief", "text":"1 compute unit."}], "children":[{"name":"Function overhead", "type":"resource", "data":[1338, 2411, 0, 0, 10], "details":[{"type":"text", "text":"Kernel dispatch logic."}, {"type":"brief", "text":"Kernel dispatch logic."}]}, {"name":"Coalesced Private Variables: \\n - \'i\' (pipes.cpp:39)\\n - \'LinearIndex\' (accessor.hpp:1537)", "type":"resource", "data":[7, 69, 0, 0, 0], "debug":[[{"filename":"accessor.hpp", "line":1537}], [{"filename":"pipes.cpp", "line":39}]], "details":[{"type":"text", "text":"Type: Register"}, {"type":"text", "text":"1 register of width 65 bits and depth 1"}, {"type":"brief", "text":"Register,\\n1 reg, 65 width by 1 depth"}]}, {"name":"Private Variable: \\n - \'i\' (pipes.cpp:39)", "type":"resource", "data":[7, 68, 0, 0, 0], "debug":[[{"filename":"pipes.cpp", "line":39}]], "details":[{"type":"text", "text":"Type: Register"}, {"type":"text", "text":"1 register of width 64 bits and depth 1"}, {"type":"brief", "text":"Register,\\n1 reg, 64 width by 1 depth"}]}, {"name":"ProducerTutorial.B0", "type":"basicblock", "children":[{"name":"State", "type":"resource", "data":[2, 66, 0, 0, 0], "details":[{"type":"brief", "text":"Live values and control logic"}, {"type":"text", "text":"Resources for live values and control logic. To reduce this area:", "details":[{"type":"text", "text":"reduce size of local variables"}, {"type":"text", "text":"reduce scope of local variables, localizing them as much as possible"}, {"type":"text", "text":"reduce number of nested loops"}]}], "children":[{"name":"pipes.cpp:39", "type":"resource", "data":[2, 66, 0, 0, 0], "debug":[[{"filename":"/home/u58822/One-API/oneAPI-samples/DirectProgramming/DPC++FPGA/Tutorials/Features/pipes/build/src/pipes.cpp", "line":39}]]}]}, {"name":"Feedback", "type":"resource", "data":[8, 2, 0, 0, 0], "details":[{"type":"brief", "text":"Loop-carried dependencies"}, {"type":"text", "text":"Resources for loop-carried dependencies. To reduce this area:", "details":[{"type":"text", "text":"reduce number and size of loop-carried variables"}]}], "children":[{"name":"No Source Line", "type":"resource", "data":[8, 2, 0, 0, 0]}]}, {"name":"Computation", "type":"resource", "children":[{"name":"pipes.cpp:39", "type":"resource", "data":[152, 65, 0, 0, 0], "debug":[[{"filename":"/home/u58822/One-API/oneAPI-samples/DirectProgramming/DPC++FPGA/Tutorials/Features/pipes/build/src/pipes.cpp", "line":39}]], "children":[{"name":"64-bit Integer Compare", "type":"resource", "count":2, "data":[88, 1, 0, 0, 0]}, {"name":"64-bit Select", "type":"resource", "count":1, "data":[64, 64, 0, 0, 0]}], "replace_name":"true"}]}]}, {"name":"ProducerTutorial.B1", "type":"basicblock", "children":[{"name":"State", "type":"resource", "data":[3, 9, 0, 0, 0], "details":[{"type":"brief", "text":"Live values and control logic"}, {"type":"text", "text":"Resources for live values and control logic. To reduce this area:", "details":[{"type":"text", "text":"reduce size of local variables"}, {"type":"text", "text":"reduce scope of local variables, localizing them as much as possible"}, {"type":"text", "text":"reduce number of nested loops"}]}], "children":[{"name":"No Source Line", "type":"resource", "data":[3, 9, 0, 0, 0]}]}, {"name":"Feedback", "type":"resource", "data":[41, 35, 0, 0, 0], "details":[{"type":"brief", "text":"Loop-carried dependencies"}, {"type":"text", "text":"Resources for loop-carried dependencies. To reduce this area:", "details":[{"type":"text", "text":"reduce number and size of loop-carried variables"}]}], "children":[{"name":"pipes.cpp:39", "type":"resource", "data":[41, 35, 0, 0, 0], "debug":[[{"filename":"/home/u58822/One-API/oneAPI-samples/DirectProgramming/DPC++FPGA/Tutorials/Features/pipes/build/src/pipes.cpp", "line":39}]]}]}, {"name":"Cluster logic", "type":"resource", "data":[8, 6, 0, 0, 4], "details":[{"type":"brief", "text":"Logic required to efficiently support sets of operations that do not stall"}, {"type":"text", "text":"Logic required to efficiently support sets of operations that do not stall. This area cannot be affected directly."}]}, {"name":"Computation", "type":"resource", "children":[{"name":"pipes.cpp:39", "type":"resource", "data":[82, 0, 0, 0, 0], "debug":[[{"filename":"/home/u58822/One-API/oneAPI-samples/DirectProgramming/DPC++FPGA/Tutorials/Features/pipes/build/src/pipes.cpp", "line":39}]], "children":[{"name":"1-bit And", "type":"resource", "count":1, "data":[1, 0, 0, 0, 0]}, {"name":"1-bit Or", "type":"resource", "count":5, "data":[3, 0, 0, 0, 0]}, {"name":"4-bit Select", "type":"resource", "count":1, "data":[4, 0, 0, 0, 0]}, {"name":"65-bit Integer Compare", "type":"resource", "count":1, "data":[22, 0, 0, 0, 0]}, {"name":"65-bit Select", "type":"resource", "count":1, "data":[52, 0, 0, 0, 0]}], "replace_name":"true"}, {"name":"pipes.cpp:40 > pipes.hpp:74", "type":"resource", "data":[364, 442, 13, 0, 0], "debug":[[{"filename":"/home/u58822/One-API/oneAPI-samples/DirectProgramming/DPC++FPGA/Tutorials/Features/pipes/build/src/pipes.cpp", "line":40}, {"filename":"/glob/development-tools/versions/oneapi/gold/inteloneapi/compiler/2021.1.2/linux/bin/../include/sycl/CL/sycl/INTEL/pipes.hpp", "line":74}]], "children":[{"name":"Load", "type":"resource", "count":1, "data":[360, 440, 13, 0, 0], "details":[{"type":"text", "text":"Load uses a Prefetching LSU"}, {"type":"brief", "text":"Prefetching LSU"}]}, {"name":"Pipe Write", "type":"resource", "count":1, "data":[4, 2, 0, 0, 0]}], "replace_name":"true"}]}]}, {"name":"ProducerTutorial.B2", "type":"basicblock", "children":[{"name":"Feedback", "type":"resource", "data":[5, 8, 0, 0, 0], "details":[{"type":"brief", "text":"Loop-carried dependencies"}, {"type":"text", "text":"Resources for loop-carried dependencies. To reduce this area:", "details":[{"type":"text", "text":"reduce number and size of loop-carried variables"}]}], "children":[{"name":"No Source Line", "type":"resource", "data":[5, 8, 0, 0, 0]}]}]}]}]};
var area_srcJSON={"children":[{"children":[{"data":[179950,358572,492,123,0],"details":[{"text":"Platform interface logic.","type":"text"}],"name":"Board interface","type":"resource"}],"name":"Static Partition","type":"partition"},{"data":[5034,9568,52,0,0],"details":[{"text":"Global interconnect for 1 global load and 1 global store.","type":"text"},{"text":"For 1 global load and 1 global store.","type":"brief"},{"links":[{"guide":"Best Practices Guide : Global Memory Interconnect","link":"file:////glob/development-tools/versions/oneapi/gold/inteloneapi/compiler/2021.1.2/linux/lib/oclfpga/aoc_help_pages/hnj1476724450050.html"}],"text":"See %L for more information","type":"text"}],"name":"Global interconnect","type":"resource"},{"data":[0,67,2,0,0],"details":[{"text":"This read-only memory contains information for the host about the system and about each kernel in the system, including kernel names, arguments, and attributes. The system description ROM ensures that the binary image on the FPGA is compatible with the host program.","type":"text"},{"text":"Contains information for the host.","type":"brief"}],"name":"System description ROM","type":"resource"},{"children":[{"data":[27,206,0,0,0],"details":[{"text":"Pipe is implemented 32 bits wide by 4 deep.","type":"text"},{"text":"32b wide by 4 deep.","type":"brief"},{"links":[{"guide":"Best Practices Guide : Channels","link":"file:////glob/development-tools/versions/oneapi/gold/inteloneapi/compiler/2021.1.2/linux/lib/oclfpga/aoc_help_pages/qah1476410829821.html"}],"text":"See %L for more information","type":"text"}],"name":"Pipe (cl::sycl::INTEL::pipe<ProducerConsumerPipe, int, 4>)","type":"resource"}],"data":[27,206,0,0,0],"name":"Pipe resources","type":"group"},{"children":[{"data":[70,57,0,0,5],"details":[{"text":"Feedback+Cluster logic","type":"brief"}],"name":"Data control overhead","type":"resource"},{"data":[1338,2411,0,0,10],"details":[{"text":"Kernel dispatch logic.","type":"text"},{"text":"Kernel dispatch logic.","type":"brief"}],"name":"Function overhead","type":"resource"},{"data":[7,69,0,0,0],"details":[{"text":"Type: Register","type":"text"},{"text":"1 register of width 65 bits and depth 1","type":"text"},{"text":"Register,\\n1 reg, 65 width by 1 depth","type":"brief"}],"name":"Coalesced Private Variables: \\n - \'i\' (pipes.cpp:63)\\n - \'LinearIndex\' (accessor.hpp:1523)","type":"resource"},{"data":[7,68,0,0,0],"details":[{"text":"Type: Register","type":"text"},{"text":"1 register of width 64 bits and depth 1","type":"text"},{"text":"Register,\\n1 reg, 64 width by 1 depth","type":"brief"}],"name":"Private Variable: \\n - \'i\' (pipes.cpp:63)","type":"resource"},{"children":[{"count":"1","data":[2,66,0,0,0],"debug":[[{"filename":"/home/u58822/One-API/oneAPI-samples/DirectProgramming/DPC++FPGA/Tutorials/Features/pipes/build/src/pipes.cpp","line":"63"}]],"name":"State","type":"resource"},{"count":2,"data":[88,1,0,0,0],"debug":[[{"filename":"/home/u58822/One-API/oneAPI-samples/DirectProgramming/DPC++FPGA/Tutorials/Features/pipes/build/src/pipes.cpp","line":"63"}]],"name":"64-bit Integer Compare","type":"resource"},{"count":1,"data":[64,64,0,0,0],"debug":[[{"filename":"/home/u58822/One-API/oneAPI-samples/DirectProgramming/DPC++FPGA/Tutorials/Features/pipes/build/src/pipes.cpp","line":"63"}]],"name":"64-bit Select","type":"resource"},{"count":1,"data":[1,0,0,0,0],"debug":[[{"filename":"/home/u58822/One-API/oneAPI-samples/DirectProgramming/DPC++FPGA/Tutorials/Features/pipes/build/src/pipes.cpp","line":"63"}]],"name":"1-bit And","type":"resource"},{"count":5,"data":[3,0,0,0,0],"debug":[[{"filename":"/home/u58822/One-API/oneAPI-samples/DirectProgramming/DPC++FPGA/Tutorials/Features/pipes/build/src/pipes.cpp","line":"63"}]],"name":"1-bit Or","type":"resource"},{"count":1,"data":[4,0,0,0,0],"debug":[[{"filename":"/home/u58822/One-API/oneAPI-samples/DirectProgramming/DPC++FPGA/Tutorials/Features/pipes/build/src/pipes.cpp","line":"63"}]],"name":"4-bit Select","type":"resource"},{"count":1,"data":[22,0,0,0,0],"debug":[[{"filename":"/home/u58822/One-API/oneAPI-samples/DirectProgramming/DPC++FPGA/Tutorials/Features/pipes/build/src/pipes.cpp","line":"63"}]],"name":"65-bit Integer Compare","type":"resource"},{"count":1,"data":[52,0,0,0,0],"debug":[[{"filename":"/home/u58822/One-API/oneAPI-samples/DirectProgramming/DPC++FPGA/Tutorials/Features/pipes/build/src/pipes.cpp","line":"63"}]],"name":"65-bit Select","type":"resource"}],"data":[236,131,0,0,0],"debug":[[{"filename":"/home/u58822/One-API/oneAPI-samples/DirectProgramming/DPC++FPGA/Tutorials/Features/pipes/build/src/pipes.cpp","line":63}]],"name":"/home/u58822/One-API/oneAPI-samples/DirectProgramming/DPC++FPGA/Tutorials/Features/pipes/build/src/pipes.cpp:63","type":"resource"},{"children":[{"count":"1","data":[11,16,0,0,0],"debug":[[{"filename":"","line":0}]],"name":"State","type":"resource"}],"data":[11,16,0,0,0],"name":"No Source Line","type":"resource"},{"children":[{"children":[{"count":1,"data":[1,0,0,0,0],"debug":[[{"filename":"/home/u58822/One-API/oneAPI-samples/DirectProgramming/DPC++FPGA/Tutorials/Features/pipes/build/src/pipes.cpp","line":"65"}]],"name":"Pipe Read","type":"resource"}],"data":[1,0,0,0,0],"debug":[[{"filename":"/home/u58822/One-API/oneAPI-samples/DirectProgramming/DPC++FPGA/Tutorials/Features/pipes/build/src/pipes.cpp","line":65},{"filename":"/glob/development-tools/versions/oneapi/gold/inteloneapi/compiler/2021.1.2/linux/bin/../include/sycl/CL/sycl/INTEL/pipes.hpp","line":61}]],"name":"pipes.cpp:65 > pipes.hpp:61","replace_name":true,"type":"resource"}],"data":[1,0,0,0,0],"debug":[[{"filename":"/home/u58822/One-API/oneAPI-samples/DirectProgramming/DPC++FPGA/Tutorials/Features/pipes/build/src/pipes.cpp","line":65}]],"name":"/home/u58822/One-API/oneAPI-samples/DirectProgramming/DPC++FPGA/Tutorials/Features/pipes/build/src/pipes.cpp:65","replace_name":"true","type":"resource"},{"children":[{"children":[{"count":1,"data":[79,191,0,1.5,0],"debug":[[{"filename":"/home/u58822/One-API/oneAPI-samples/DirectProgramming/DPC++FPGA/Tutorials/Features/pipes/build/src/pipes.cpp","line":"68"}]],"name":"32-bit Integer Multiply","type":"resource"}],"data":[79,191,0,1.5,0],"debug":[[{"filename":"/home/u58822/One-API/oneAPI-samples/DirectProgramming/DPC++FPGA/Tutorials/Features/pipes/build/src/pipes.cpp","line":68},{"filename":"/home/u58822/One-API/oneAPI-samples/DirectProgramming/DPC++FPGA/Tutorials/Features/pipes/build/src/pipes.cpp","line":51}]],"name":"pipes.cpp:68 > pipes.cpp:51","replace_name":true,"type":"resource"}],"data":[79,191,0,1.5,0],"debug":[[{"filename":"/home/u58822/One-API/oneAPI-samples/DirectProgramming/DPC++FPGA/Tutorials/Features/pipes/build/src/pipes.cpp","line":68}]],"name":"/home/u58822/One-API/oneAPI-samples/DirectProgramming/DPC++FPGA/Tutorials/Features/pipes/build/src/pipes.cpp:68","replace_name":"true","type":"resource"},{"children":[{"count":1,"data":[391,2128,0,0,31],"debug":[[{"filename":"/home/u58822/One-API/oneAPI-samples/DirectProgramming/DPC++FPGA/Tutorials/Features/pipes/build/src/pipes.cpp","line":"71"}]],"name":"Store","type":"resource"}],"data":[391,2128,0,0,31],"debug":[[{"filename":"/home/u58822/One-API/oneAPI-samples/DirectProgramming/DPC++FPGA/Tutorials/Features/pipes/build/src/pipes.cpp","line":71}]],"name":"/home/u58822/One-API/oneAPI-samples/DirectProgramming/DPC++FPGA/Tutorials/Features/pipes/build/src/pipes.cpp:71","replace_name":"true","type":"resource"}],"compute_units":1,"data":[2140,5071,0,1.5,46],"debug":[[{"filename":"pipes.cpp","line":63}]],"details":[{"text":"Number of compute units: 1","type":"text"},{"text":"1 compute unit.","type":"brief"}],"name":"ConsumerTutorial","total_kernel_resources":[2140,5071,0,1.5,46],"total_percent":[0.627993,0.358146,0.296758,0,0.131752],"type":"function"},{"children":[{"data":[62,51,0,0,4],"details":[{"text":"Feedback+Cluster logic","type":"brief"}],"name":"Data control overhead","type":"resource"},{"data":[1338,2411,0,0,10],"details":[{"text":"Kernel dispatch logic.","type":"text"},{"text":"Kernel dispatch logic.","type":"brief"}],"name":"Function overhead","type":"resource"},{"data":[7,69,0,0,0],"details":[{"text":"Type: Register","type":"text"},{"text":"1 register of width 65 bits and depth 1","type":"text"},{"text":"Register,\\n1 reg, 65 width by 1 depth","type":"brief"}],"name":"Coalesced Private Variables: \\n - \'i\' (pipes.cpp:39)\\n - \'LinearIndex\' (accessor.hpp:1537)","type":"resource"},{"data":[7,68,0,0,0],"details":[{"text":"Type: Register","type":"text"},{"text":"1 register of width 64 bits and depth 1","type":"text"},{"text":"Register,\\n1 reg, 64 width by 1 depth","type":"brief"}],"name":"Private Variable: \\n - \'i\' (pipes.cpp:39)","type":"resource"},{"children":[{"count":"1","data":[2,66,0,0,0],"debug":[[{"filename":"/home/u58822/One-API/oneAPI-samples/DirectProgramming/DPC++FPGA/Tutorials/Features/pipes/build/src/pipes.cpp","line":"39"}]],"name":"State","type":"resource"},{"count":2,"data":[88,1,0,0,0],"debug":[[{"filename":"/home/u58822/One-API/oneAPI-samples/DirectProgramming/DPC++FPGA/Tutorials/Features/pipes/build/src/pipes.cpp","line":"39"}]],"name":"64-bit Integer Compare","type":"resource"},{"count":1,"data":[64,64,0,0,0],"debug":[[{"filename":"/home/u58822/One-API/oneAPI-samples/DirectProgramming/DPC++FPGA/Tutorials/Features/pipes/build/src/pipes.cpp","line":"39"}]],"name":"64-bit Select","type":"resource"},{"count":1,"data":[1,0,0,0,0],"debug":[[{"filename":"/home/u58822/One-API/oneAPI-samples/DirectProgramming/DPC++FPGA/Tutorials/Features/pipes/build/src/pipes.cpp","line":"39"}]],"name":"1-bit And","type":"resource"},{"count":5,"data":[3,0,0,0,0],"debug":[[{"filename":"/home/u58822/One-API/oneAPI-samples/DirectProgramming/DPC++FPGA/Tutorials/Features/pipes/build/src/pipes.cpp","line":"39"}]],"name":"1-bit Or","type":"resource"},{"count":1,"data":[4,0,0,0,0],"debug":[[{"filename":"/home/u58822/One-API/oneAPI-samples/DirectProgramming/DPC++FPGA/Tutorials/Features/pipes/build/src/pipes.cpp","line":"39"}]],"name":"4-bit Select","type":"resource"},{"count":1,"data":[22,0,0,0,0],"debug":[[{"filename":"/home/u58822/One-API/oneAPI-samples/DirectProgramming/DPC++FPGA/Tutorials/Features/pipes/build/src/pipes.cpp","line":"39"}]],"name":"65-bit Integer Compare","type":"resource"},{"count":1,"data":[52,0,0,0,0],"debug":[[{"filename":"/home/u58822/One-API/oneAPI-samples/DirectProgramming/DPC++FPGA/Tutorials/Features/pipes/build/src/pipes.cpp","line":"39"}]],"name":"65-bit Select","type":"resource"}],"data":[236,131,0,0,0],"debug":[[{"filename":"/home/u58822/One-API/oneAPI-samples/DirectProgramming/DPC++FPGA/Tutorials/Features/pipes/build/src/pipes.cpp","line":39}]],"name":"/home/u58822/One-API/oneAPI-samples/DirectProgramming/DPC++FPGA/Tutorials/Features/pipes/build/src/pipes.cpp:39","type":"resource"},{"children":[{"count":"1","data":[3,9,0,0,0],"debug":[[{"filename":"","line":0}]],"name":"State","type":"resource"}],"data":[3,9,0,0,0],"name":"No Source Line","type":"resource"},{"children":[{"children":[{"count":1,"data":[360,440,13,0,0],"debug":[[{"filename":"/home/u58822/One-API/oneAPI-samples/DirectProgramming/DPC++FPGA/Tutorials/Features/pipes/build/src/pipes.cpp","line":"40"}]],"name":"Load","type":"resource"},{"count":1,"data":[4,2,0,0,0],"debug":[[{"filename":"/home/u58822/One-API/oneAPI-samples/DirectProgramming/DPC++FPGA/Tutorials/Features/pipes/build/src/pipes.cpp","line":"40"}]],"name":"Pipe Write","type":"resource"}],"data":[364,442,13,0,0],"debug":[[{"filename":"/home/u58822/One-API/oneAPI-samples/DirectProgramming/DPC++FPGA/Tutorials/Features/pipes/build/src/pipes.cpp","line":40},{"filename":"/glob/development-tools/versions/oneapi/gold/inteloneapi/compiler/2021.1.2/linux/bin/../include/sycl/CL/sycl/INTEL/pipes.hpp","line":74}]],"name":"pipes.cpp:40 > pipes.hpp:74","replace_name":true,"type":"resource"}],"data":[364,442,13,0,0],"debug":[[{"filename":"/home/u58822/One-API/oneAPI-samples/DirectProgramming/DPC++FPGA/Tutorials/Features/pipes/build/src/pipes.cpp","line":40}]],"name":"/home/u58822/One-API/oneAPI-samples/DirectProgramming/DPC++FPGA/Tutorials/Features/pipes/build/src/pipes.cpp:40","replace_name":"true","type":"resource"}],"compute_units":1,"data":[2017,3181,13,0,14],"debug":[[{"filename":"pipes.cpp","line":39}]],"details":[{"text":"Number of compute units: 1","type":"text"},{"text":"1 compute unit.","type":"brief"}],"name":"ProducerTutorial","total_kernel_resources":[2017,3181,13,0,14],"total_percent":[0.431136,0.268844,0.186154,0.479174,0],"type":"function"}],"columns":["","ALUTs","FFs","RAMs","DSPs","MLABs","Details"],"data":[9218,18093,67,1.5,60],"debug_enabled":"true","max_resources":[854400,1708800,2713,1518,42720],"name":"Kernel System","total":[189168,376665,559,125,60],"total_percent":[43.0074,22.2809,22.0427,20.6045,8.23452],"type":"module"};
var mavJSON={"nodes":[{"type":"kernel", "id":2, "name":"ProducerTutorial", "children":[{"type":"bb", "id":3, "name":"ProducerTutorial.B0", "details":[{"type":"table", "Latency":"2"}]}, {"type":"bb", "id":4, "name":"ProducerTutorial.B1", "children":[{"type":"inst", "id":6, "name":"Load", "debug":[[{"filename":"/glob/development-tools/versions/oneapi/gold/inteloneapi/compiler/2021.1.2/linux/bin/../include/sycl/CL/sycl/INTEL/pipes.hpp", "line":74}]], "details":[{"type":"table", "Width":"32 bits", "Type":"Prefetching", "Stall-free":"No", "Start Cycle":"5", "Latency":"2", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"file:////glob/development-tools/versions/oneapi/gold/inteloneapi/compiler/2021.1.2/linux/lib/oclfpga/aoc_help_pages/yeo1491314105959.html"}]}]}]}, {"type":"inst", "id":7, "name":"Pipe Write", "debug":[[{"filename":"/glob/development-tools/versions/oneapi/gold/inteloneapi/compiler/2021.1.2/linux/bin/../include/sycl/CL/sycl/INTEL/pipes.hpp", "line":74}]], "details":[{"type":"table", "Width":"32 bits", "Depth":"4", "Stall-free":"No", "Start Cycle":"8", "Latency":"0", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Channels", "link":"file:////glob/development-tools/versions/oneapi/gold/inteloneapi/compiler/2021.1.2/linux/lib/oclfpga/aoc_help_pages/qah1476410829821.html"}]}]}]}, {"type":"inst", "id":9, "name":"Loop Input", "debug":[[{"filename":"/home/u58822/One-API/oneAPI-samples/DirectProgramming/DPC++FPGA/Tutorials/Features/pipes/build/src/pipes.cpp", "line":39}]], "details":[{"type":"table", "Start Cycle":"0", "Latency":"1", "Loops To":"10"}]}, {"type":"inst", "id":10, "name":"Loop End", "details":[{"type":"table", "Start Cycle":"8", "Latency":"1"}]}], "details":[{"type":"table", "Latency":"8", "II":"1", "Subloops":"No", "Pipelined":"Yes", "Fmax Bottlenecks":"No", "Loop Info":""}]}, {"type":"bb", "id":5, "name":"ProducerTutorial.B2", "details":[{"type":"table", "Latency":"0"}]}]}, {"type":"kernel", "id":12, "name":"ConsumerTutorial", "children":[{"type":"bb", "id":13, "name":"ConsumerTutorial.B0", "details":[{"type":"table", "Latency":"2"}]}, {"type":"bb", "id":14, "name":"ConsumerTutorial.B1", "children":[{"type":"inst", "id":16, "name":"Pipe Read", "debug":[[{"filename":"/glob/development-tools/versions/oneapi/gold/inteloneapi/compiler/2021.1.2/linux/bin/../include/sycl/CL/sycl/INTEL/pipes.hpp", "line":61}]], "details":[{"type":"table", "Width":"32 bits", "Depth":"4", "Stall-free":"No", "Start Cycle":"6", "Latency":"0", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Channels", "link":"file:////glob/development-tools/versions/oneapi/gold/inteloneapi/compiler/2021.1.2/linux/lib/oclfpga/aoc_help_pages/qah1476410829821.html"}]}]}]}, {"type":"inst", "id":17, "name":"Store", "debug":[[{"filename":"/home/u58822/One-API/oneAPI-samples/DirectProgramming/DPC++FPGA/Tutorials/Features/pipes/build/src/pipes.cpp", "line":71}]], "details":[{"type":"table", "Width":"32 bits", "Type":"Burst-coalesced", "Stall-free":"No", "Start Cycle":"9", "Latency":"2", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"file:////glob/development-tools/versions/oneapi/gold/inteloneapi/compiler/2021.1.2/linux/lib/oclfpga/aoc_help_pages/yeo1491314105959.html"}]}]}]}, {"type":"inst", "id":18, "name":"Loop Input", "debug":[[{"filename":"/home/u58822/One-API/oneAPI-samples/DirectProgramming/DPC++FPGA/Tutorials/Features/pipes/build/src/pipes.cpp", "line":63}]], "details":[{"type":"table", "Start Cycle":"0", "Latency":"1", "Loops To":"19"}]}, {"type":"inst", "id":19, "name":"Loop End", "details":[{"type":"table", "Start Cycle":"11", "Latency":"1"}]}], "details":[{"type":"table", "Latency":"11", "II":"1", "Subloops":"No", "Pipelined":"Yes", "Fmax Bottlenecks":"No", "Loop Info":""}]}, {"type":"bb", "id":15, "name":"ConsumerTutorial.B2", "details":[{"type":"table", "Latency":"0"}]}]}, {"type":"memtype", "id":1, "name":"Global Memory", "children":[{"type":"memsys", "id":11, "name":"DDR", "details":[{"type":"table", "Number of banks":"2"}]}]}, {"type":"pipe", "id":8, "name":"cl::sycl::INTEL::pipe<ProducerConsumerPipe, int, 4>", "debug":[[{"filename":"/home/u58822/One-API/oneAPI-samples/DirectProgramming/DPC++FPGA/Tutorials/Features/pipes/build/src/pipes.cpp", "line":38}]], "details":[{"type":"table", "Width":"32 bits", "Depth":"4"}]}], "links":[{"from":7, "to":8}, {"from":10, "to":9}, {"from":3, "to":9}, {"from":6, "to":10}, {"from":7, "to":10}, {"from":10, "to":5}, {"from":9, "to":6}, {"from":6, "to":7}, {"from":11, "to":6}, {"from":8, "to":16}, {"from":19, "to":18}, {"from":13, "to":18}, {"from":16, "to":19}, {"from":17, "to":19}, {"from":19, "to":15}, {"from":18, "to":16}, {"from":16, "to":17}, {"from":17, "to":11}]};
var loopsJSON={"columns":["", "Pipelined", "II", "Speculated iterations", "Details"], "children":[{"name":"Kernel: ProducerTutorial", "data":["", "", ""], "debug":[[{"filename":"/home/u58822/One-API/oneAPI-samples/DirectProgramming/DPC++FPGA/Tutorials/Features/pipes/build/src/pipes.cpp", "line":38}]], "details":[{"type":"brief", "text":"Single work-item execution"}, {"type":"text", "text":"Single work-item execution"}, {"type":"text", "text":"Fmax bottlenck block: None"}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Kernels", "link":"file:////glob/development-tools/versions/oneapi/gold/inteloneapi/compiler/2021.1.2/linux/lib/oclfpga/aoc_help_pages/ipp1476408832230.html"}]}], "children":[{"name":"ProducerTutorial.B1", "data":["Yes", "~1", "3"], "debug":[[{"filename":"/home/u58822/One-API/oneAPI-samples/DirectProgramming/DPC++FPGA/Tutorials/Features/pipes/build/src/pipes.cpp", "line":39}]], "details":[{"type":"brief", "text":" "}, {"type":"text", "text":"Hyper-Optimized loop structure: n/a"}, {"type":"text", "text":"II is an approximation due to the following stallable instructions:", "details":[{"type":"text", "text":"Load Operation (%L > %L)", "links":[{"filename":"/home/u58822/One-API/oneAPI-samples/DirectProgramming/DPC++FPGA/Tutorials/Features/pipes/build/src/pipes.cpp", "line":"40"}, {"filename":"/glob/development-tools/versions/oneapi/gold/inteloneapi/compiler/2021.1.2/linux/bin/../include/sycl/CL/sycl/INTEL/pipes.hpp", "line":"74"}]}, {"type":"text", "text":"Pipe Write Operation (%L > %L)", "links":[{"filename":"/home/u58822/One-API/oneAPI-samples/DirectProgramming/DPC++FPGA/Tutorials/Features/pipes/build/src/pipes.cpp", "line":"40"}, {"filename":"/glob/development-tools/versions/oneapi/gold/inteloneapi/compiler/2021.1.2/linux/bin/../include/sycl/CL/sycl/INTEL/pipes.hpp", "line":"74"}]}]}, {"type":"text", "text":"Maximum concurrent iterations: Capacity of loop", "details":[{"type":"text", "text":"Use the %L viewer to estimate capacity", "links":[{"view":"Fmax II Report"}]}]}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Loops in a Single Work-Item Kernel", "link":"file:////glob/development-tools/versions/oneapi/gold/inteloneapi/compiler/2021.1.2/linux/lib/oclfpga/aoc_help_pages/wfa1476380079940.html"}]}], "children":[]}]}, {"name":"Kernel: ConsumerTutorial", "data":["", "", ""], "debug":[[{"filename":"/home/u58822/One-API/oneAPI-samples/DirectProgramming/DPC++FPGA/Tutorials/Features/pipes/build/src/pipes.cpp", "line":62}]], "details":[{"type":"brief", "text":"Single work-item execution"}, {"type":"text", "text":"Single work-item execution"}, {"type":"text", "text":"Fmax bottlenck block: None"}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Kernels", "link":"file:////glob/development-tools/versions/oneapi/gold/inteloneapi/compiler/2021.1.2/linux/lib/oclfpga/aoc_help_pages/ipp1476408832230.html"}]}], "children":[{"name":"ConsumerTutorial.B1", "data":["Yes", "~1", "3"], "debug":[[{"filename":"/home/u58822/One-API/oneAPI-samples/DirectProgramming/DPC++FPGA/Tutorials/Features/pipes/build/src/pipes.cpp", "line":63}]], "details":[{"type":"brief", "text":" "}, {"type":"text", "text":"Hyper-Optimized loop structure: n/a"}, {"type":"text", "text":"II is an approximation due to the following stallable instructions:", "details":[{"type":"text", "text":"Pipe Read Operation (%L > %L)", "links":[{"filename":"/home/u58822/One-API/oneAPI-samples/DirectProgramming/DPC++FPGA/Tutorials/Features/pipes/build/src/pipes.cpp", "line":"65"}, {"filename":"/glob/development-tools/versions/oneapi/gold/inteloneapi/compiler/2021.1.2/linux/bin/../include/sycl/CL/sycl/INTEL/pipes.hpp", "line":"61"}]}, {"type":"text", "text":"Store Operation (%L)", "links":[{"filename":"/home/u58822/One-API/oneAPI-samples/DirectProgramming/DPC++FPGA/Tutorials/Features/pipes/build/src/pipes.cpp", "line":"71"}]}]}, {"type":"text", "text":"Maximum concurrent iterations: Capacity of loop", "details":[{"type":"text", "text":"Use the %L viewer to estimate capacity", "links":[{"view":"Fmax II Report"}]}]}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Loops in a Single Work-Item Kernel", "link":"file:////glob/development-tools/versions/oneapi/gold/inteloneapi/compiler/2021.1.2/linux/lib/oclfpga/aoc_help_pages/wfa1476380079940.html"}]}], "children":[]}]}]};
var loop_attrJSON={"name":"loop_attributes", "id":4294967295, "nodes":[{"name":"k0_ZTS16ProducerTutorial", "id":3413796816, "clk":"No", "fmax":"240.00", "type":"kernel", "children":[{"name":"ProducerTutorial.B0", "id":3413071824, "af":"240.00", "br":"0", "ci":"0", "fo":"Disabled", "ii":"1", "ll":"1", "lt":"2.000000", "mi":"n/a", "pl":"Yes", "tc":"0", "tn":"1", "type":"bb"}, {"name":"ProducerTutorial.B1", "id":3413075360, "af":"240.00", "br":"1", "ci":"0", "fo":"Disabled", "ii":"1", "ll":"1", "lt":"8.000000", "mi":"1", "pl":"Yes", "tc":"0", "tn":"1", "details":[{"type":"text", "text":"Hyper-Optimized loop structure: n/a"}], "debug":[[{"filename":"/home/u58822/One-API/oneAPI-samples/DirectProgramming/DPC++FPGA/Tutorials/Features/pipes/build/src/pipes.cpp", "line":39}]], "type":"loop"}, {"name":"ProducerTutorial.B2", "id":3413075440, "af":"240.00", "br":"0", "ci":"0", "fo":"Disabled", "ii":"1", "ll":"1", "lt":"1.000000", "mi":"n/a", "pl":"Yes", "tc":"0", "tn":"1", "type":"bb"}]}, {"name":"k1_ZTS16ConsumerTutorial", "id":3413000608, "clk":"No", "fmax":"240.00", "type":"kernel", "children":[{"name":"ConsumerTutorial.B0", "id":3413736368, "af":"240.00", "br":"0", "ci":"0", "fo":"Disabled", "ii":"1", "ll":"1", "lt":"2.000000", "mi":"n/a", "pl":"Yes", "tc":"0", "tn":"1", "type":"bb"}, {"name":"ConsumerTutorial.B1", "id":3413737712, "af":"240.00", "br":"1", "ci":"0", "fo":"Disabled", "ii":"1", "ll":"1", "lt":"11.000000", "mi":"1", "pl":"Yes", "tc":"0", "tn":"1", "details":[{"type":"text", "text":"Hyper-Optimized loop structure: n/a"}], "debug":[[{"filename":"/home/u58822/One-API/oneAPI-samples/DirectProgramming/DPC++FPGA/Tutorials/Features/pipes/build/src/pipes.cpp", "line":63}]], "type":"loop"}, {"name":"ConsumerTutorial.B2", "id":3413738656, "af":"240.00", "br":"0", "ci":"0", "fo":"Disabled", "ii":"1", "ll":"1", "lt":"1.000000", "mi":"n/a", "pl":"Yes", "tc":"0", "tn":"1", "type":"bb"}]}]};
var summaryJSON={"performanceSummary":{"name":"Kernel Summary", "columns":["Kernel Name", "Kernel Type", "Autorun", "Workgroup Size", "# Compute Units"], "children":[{"name":"ConsumerTutorial", "data":["Single work-item", "No", [1, 1, 1], 1], "details":[{"type":"text", "text":"Kernel type: Single work-item"}, {"type":"text", "text":"Required workgroup size: (1, 1, 1)"}, {"type":"text", "text":"Maximum workgroup size: 1"}], "debug":[[{"filename":"", "line":0}]]}, {"name":"ProducerTutorial", "data":["Single work-item", "No", [1, 1, 1], 1], "details":[{"type":"text", "text":"Kernel type: Single work-item"}, {"type":"text", "text":"Required workgroup size: (1, 1, 1)"}, {"type":"text", "text":"Maximum workgroup size: 1"}], "debug":[[{"filename":"", "line":0}]]}]}, "estimatedResources":{"name":"Estimated Resource Usage", "columns":["Kernel Name", "ALUTs ", "FFs  ", "RAMs ", "DSPs ", "MLABs"], "children":[{"name":"ConsumerTutorial", "data":[2140, 5071, 0, 1.5, 46], "debug":[[{"filename":"", "line":0}]]}, {"name":"ProducerTutorial", "data":[2017, 3181, 13, 0, 14], "debug":[[{"filename":"", "line":0}]]}, {"name":"Kernel Subtotal", "classes":["summary-highlight", "nohover"], "data":[4157, 8252, 13, 1, 60]}, {"name":"Global Interconnect", "classes":["summary-highlight", "nohover"], "data":[5034, 9568, 52, 0, 0]}, {"name":"Board Interface", "classes":["summary-highlight", "nohover"], "data":[179950, 358572, 492, 123, 0]}, {"name":"System description ROM", "classes":["summary-highlight", "nohover"], "data":[0, 67, 2, 0, 0]}, {"name":"Pipe resources", "classes":["summary-highlight", "nohover"], "data":[27, 206, 0, 0, 0]}, {"name":"Total", "classes":["summary-highlight", "nohover"], "data":[189168, 376665, 559, 124, 60], "data_percent":[22.1404, 22.0427, 20.6045, 8.23452]}, {"name":"Available", "classes":["summary-highlight", "nohover"], "data":[854400, 1708800, 2713, 1518, 0]}]}, "compileWarnings":{"name":"Compile Warnings", "children":[]}};
var warningsJSON={"nodes":[]};
var fileJSON=[{"path":"/glob/development-tools/versions/oneapi/gold/inteloneapi/dev-utilities/2021.1.1/include/dpc_common.hpp", "name":"dpc_common.hpp", "has_active_debug_locs":false, "absName":"/glob/development-tools/versions/oneapi/gold/inteloneapi/dev-utilities/2021.1.1/include/dpc_common.hpp", "content":"//==============================================================\012// Copyright © 2020 Intel Corporation\012//\012// SPDX-License-Identifier: MIT\012// =============================================================\012\012#ifndef _DP_HPP\012#define _DP_HPP\012\012#pragma once\012\012#include <stdlib.h>\012#include <exception>\012\012#include <CL/sycl.hpp>\012\012namespace dpc_common {\012// this exception handler with catch async exceptions\012static auto exception_handler = [](cl::sycl::exception_list eList) {\012  for (std::exception_ptr const &e : eList) {\012    try {\012      std::rethrow_exception(e);\012    } catch (std::exception const &e) {\012#if _DEBUG\012      std::cout << \"Failure\" << std::endl;\012#endif\012      std::terminate();\012    }\012  }\012};\012\012// The TimeInterval is a simple RAII class.\012// Construct the timer at the point you want to start timing.\012// Use the Elapsed() method to return time since construction.\012\012class TimeInterval {\012 public:\012  TimeInterval() : start_(std::chrono::steady_clock::now()) {}\012\012  double Elapsed() {\012    auto now = std::chrono::steady_clock::now();\012    return std::chrono::duration_cast<Duration>(now - start_).count();\012  }\012\012 private:\012  using Duration = std::chrono::duration<double>;\012  std::chrono::steady_clock::time_point start_;\012};\012\012};  // namespace dpc_common\012\012#endif\012"}, {"path":"/home/u58822/One-API/oneAPI-samples/DirectProgramming/DPC++FPGA/Tutorials/Features/pipes/build/src/pipes.cpp", "name":"pipes.cpp", "has_active_debug_locs":false, "absName":"/home/u58822/One-API/oneAPI-samples/DirectProgramming/DPC++FPGA/Tutorials/Features/pipes/build/src/pipes.cpp", "content":"//==============================================================\012// Copyright Intel Corporation\012//\012// SPDX-License-Identifier: MIT\012// =============================================================\012#include <CL/sycl.hpp>\012#include <CL/sycl/INTEL/fpga_extensions.hpp>\012#include <iomanip>\012#include <iostream>\012#include <vector>\012\012// dpc_common.hpp can be found in the dev-utilities include folder.\012// e.g., $ONEAPI_ROOT/dev-utilities//include/dpc_common.hpp\012#include \"dpc_common.hpp\"\012\012\012using namespace sycl;\012\012using ProducerToConsumerPipe = INTEL::pipe<  // Defined in the SYCL headers.\012    class ProducerConsumerPipe,              // An identifier for the pipe.\012    int,                                     // The type of data in the pipe.\012    4>;                                      // The capacity of the pipe.\012\012// Forward declare the kernel names to reduce name mangling\012class ProducerTutorial;\012class ConsumerTutorial;\012\012// The Producer kernel reads data from a SYCL buffer and writes it to\012// a pipe. This transfers the input data from the host to the Consumer kernel\012// that is running concurrently.\012event Producer(queue &q, buffer<int, 1> &input_buffer) {\012  std::cout << \"Enqueuing producer...\\n\";\012\012  auto e = q.submit([&](handler &h) {\012    accessor input_accessor(input_buffer, h, read_only);\012    size_t num_elements = input_buffer.get_count();\012\012    h.single_task<ProducerTutorial>([=]() {\012      for (size_t i = 0; i < num_elements; ++i) {\012        ProducerToConsumerPipe::write(input_accessor[i]);\012      }\012    });\012  });\012\012  return e;\012}\012\012\012// An example of some simple work, to be done by the Consumer kernel\012// on the input data\012int ConsumerWork(int i) { return i * i; }\012\012// The Consumer kernel reads data from the pipe, performs some work\012// on the data, and writes the results to an output buffer\012event Consumer(queue &q, buffer<int, 1> &out_buf) {\012  std::cout << \"Enqueuing consumer...\\n\";\012\012  auto e = q.submit([&](handler &h) {\012    accessor out_accessor(out_buf, h, write_only, noinit);\012    size_t num_elements = out_buf.get_count();\012\012    h.single_task<ConsumerTutorial>([=]() {\012      for (size_t i = 0; i < num_elements; ++i) {\012        // read the input from the pipe\012        int input = ProducerToConsumerPipe::read();\012\012        // do work on the input\012        int answer = ConsumerWork(input);\012\012        // write the result to the output buffer\012        out_accessor[i] = answer;\012      }\012    });\012  });\012\012  return e;\012}\012\012int main(int argc, char *argv[]) {\012  // Default values for the buffer size is based on whether the target is the\012  // FPGA emulator or actual FPGA hardware\012#if defined(FPGA_EMULATOR)\012  size_t array_size = 1 << 12;\012#else\012  size_t array_size = 1 << 20;\012#endif\012  \012  // allow the user to change the buffer size at the command line\012  if (argc > 1) {\012    std::string option(argv[1]);\012    if (option == \"-h\" || option == \"--help\") {\012      std::cout << \"Usage: \\n./pipes <data size>\\n\\nFAILED\\n\";\012      return 1;\012    } else {\012      array_size = atoi(argv[1]);\012    }\012  }\012\012  std::cout << \"Input Array Size: \" << array_size << \"\\n\";\012\012  std::vector<int> producer_input(array_size, -1);\012  std::vector<int> consumer_output(array_size, -1);\012\012  // Initialize the input data with numbers from 0, 1, 2, ..., array_size-1\012  std::iota(producer_input.begin(), producer_input.begin(), 0);\012\012#if defined(FPGA_EMULATOR)\012  INTEL::fpga_emulator_selector device_selector;\012#else\012  INTEL::fpga_selector device_selector;\012#endif\012\012  event producer_event, consumer_event;\012\012  try {\012    // property list to enable SYCL profiling for the device queue\012    auto props = property_list{property::queue::enable_profiling()};\012\012    // create the device queue with SYCL profiling enabled\012    queue q(device_selector, dpc_common::exception_handler, props);\012\012    // create the \012    buffer producer_buffer(producer_input);\012    buffer consumer_buffer(consumer_output);\012\012    // Run the two kernels concurrently. The Producer kernel sends\012    // data via a pipe to the Consumer kernel.\012    producer_event = Producer(q, producer_buffer);\012    consumer_event = Consumer(q, consumer_buffer);\012\012  } catch (exception const &e) {\012    // Catches exceptions in the host code\012    std::cerr << \"Caught a SYCL host exception:\\n\" << e.what() << \"\\n\";\012\012    // Most likely the runtime couldn't find FPGA hardware!\012    if (e.get_cl_code() == CL_DEVICE_NOT_FOUND) {\012      std::cerr << \"If you are targeting an FPGA, please ensure that your \"\012                   \"system has a correctly configured FPGA board.\\n\";\012      std::cerr << \"Run sys_check in the oneAPI root directory to verify.\\n\";\012      std::cerr << \"If you are targeting the FPGA emulator, compile with \"\012                   \"-DFPGA_EMULATOR.\\n\";\012    }\012    std::terminate();\012  }\012\012  // At this point, the producer_buffer and consumer_buffer have gone out \012  // of scope. This will cause their destructors to be called, which will in \012  // turn block until the Producer and Consumer kernels are finished and the\012  // output data is copied back to the host. Therefore, at this point it is\012  // safe and correct to access the contents of the consumer_output vector.\012\012  // print profiling information\012  // alias the 'info::event_profiling' namespace to save column space\012  using syclprof = info::event_profiling;\012\012  // start and end time of the Producer kernel\012  double p_start = producer_event.get_profiling_info<syclprof::command_start>();\012  double p_end = producer_event.get_profiling_info<syclprof::command_end>();\012\012  // start and end time of the Consumer kernel\012  double c_start = consumer_event.get_profiling_info<syclprof::command_start>();\012  double c_end = consumer_event.get_profiling_info<syclprof::command_end>();\012\012  // the total application time\012  double total_time_ms = (c_end - p_start) * 1e-6;\012\012  // the input size in MBs\012  double input_size_mb = array_size * sizeof(int) * 1e-6;\012\012  // the total application throughput\012  double throughput_mbs = input_size_mb / (total_time_ms * 1e-3);\012\012  // Print the start times normalized to the start time of the producer.\012  // i.e. the producer starts at 0ms and the other start/end times are\012  // reported as differences to that number (+X ms).\012  std::cout << std::fixed << std::setprecision(3);\012  std::cout << \"\\n\";\012  std::cout << \"Profiling Info\\n\";\012  std::cout << \"\\tProducer:\\n\";\012  std::cout << \"\\t\\tStart time: \" << 0 << \" ms\\n\";\012  std::cout << \"\\t\\tEnd time: +\" << (p_end-p_start)*1e-6 << \" ms\\n\";\012  std::cout << \"\\t\\tKernel Duration: \" << (p_end-p_start)*1e-6 << \" ms\\n\";\012  std::cout << \"\\tConsumer:\\n\";\012  std::cout << \"\\t\\tStart time: +\" << (c_start-p_start)*1e-6 << \" ms\\n\";\012  std::cout << \"\\t\\tEnd time: +\" << (c_end-p_start)*1e-6 << \" ms\\n\";\012  std::cout << \"\\t\\tKernel Duration: \" << (c_end-c_start)*1e-6 << \" ms\\n\";\012  std::cout << \"\\tDesign Duration: \" << total_time_ms << \" ms\\n\";\012  std::cout << \"\\tDesign Throughput: \" << throughput_mbs << \" MB/s\\n\";\012  std::cout << \"\\n\";\012\012  // Verify the result\012  for (size_t i = 0; i < array_size; i++) {\012    if (consumer_output[i] != ConsumerWork(producer_input[i])) {\012      std::cout << \"input = \" << producer_input[i]\012                << \" expected: \" << ConsumerWork(producer_input[i])\012                << \" got: \" << consumer_output[i] << \"\\n\";\012      std::cout << \"FAILED: The results are incorrect\\n\";\012      return 1;\012    }\012  }\012  std::cout << \"PASSED: The results are correct\\n\";\012  return 0;\012}\012"}];
var alpha_viewer=false;